<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
        default-lazy-init="true">

	<description>persistence</description>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.yonyou.iuap.system.entity,com.yonyou.iuap.example.entity"/>
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
				<prop key="hibernate.show_sql">false</prop>  
			</props>
		</property>
	</bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>

	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="com.yonyou.iuap"  transaction-manager-ref="transactionManager" factory-class="org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean" entity-manager-factory-ref="entityManagerFactory"/>
   
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    
	<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
	<!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		Connection Info
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	
		Connection Pooling Info
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="${jdbc.pool.maxWait}" />
		<property name="defaultAutoCommit" value="true" />
		
		<property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}" />
		<property name="removeAbandoned" value="${jdbc.pool.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}" />
	</bean> -->
	<!-- 数据源配置, 使用HikariCP JDBC连接池 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info -->
		<property name="connectionTimeout" value="${config.connection.timeout}" />
		<property name="validationTimeout" value="${config.validation.timeout}" />
		<property name="idleTimeout" value="${config.idle.timeout}" />
		<property name="maxLifetime" value="${config.max.life.time}" />
		<property name="maximumPoolSize" value="${config.max.pool.size}" />
		<property name="minimumIdle" value="${config.min.idle}"/>
	</bean>

	<bean id="crossdbDataSource" class="com.yonyou.iuap.persistence.bs.framework.ds.CrossdbDataSource">
		<constructor-arg name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="crossdbJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="crossdbDataSource"></property>
	</bean>

	<bean id="baseDAO" class="com.yonyou.iuap.persistence.bs.dao.BaseDAO">
		<property name="jdbcTemplate" ref="crossdbJdbcTemplate"/>
		<property name="dbMetaHelper" ref="dbMetaInfo"/>
	</bean>
	
	<bean id="dcmsDAO" class="com.yonyou.util.jdbc.BaseDao">
		<property name="dataSource" ref="dataSource">
		</property>
	</bean>
	
	<bean id="IRmIdFactory" class="com.yonyou.util.RmIdFactory"/>

	<bean id="dbMetaInfo" class="com.yonyou.iuap.persistence.bs.util.DBMetaHelper">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
		<!-- 可以指定默认数据库类型 -->
		<!--<property name="dbType" value="#{T(uap.web.persist.jdbc.framework.util.DBConsts).POSTGRESQL}"/>-->
	</bean>
	
	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
 	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
    </bean>	
    
    
    
    
	<bean id="transactionManagerForJdbc" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!--
		Transaction advice definition, based on method name patterns.
		Defaults to PROPAGATION_REQUIRED for all methods whose name starts with
		"insert" or "update", and to PROPAGATION_REQUIRED with read-only hint
		for all other methods.  timeout="600000" propagation="NOT_SUPPORTED" 
	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManagerForJdbc">
		<tx:attributes>
			<tx:method name="insert*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/>
			<tx:method name="doUpdate*"/>
			<tx:method name="execute*" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.yonyou.util.service.BaseService.*(..))" 
							 advice-ref="txAdvice" order="0"/>
	</aop:config>
	
	
   
    
    
    
</beans>